/**
 * Fast API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnyOfBaseQueryGroupQuery from './AnyOfBaseQueryGroupQuery';
import AnyOfstringstring from './AnyOfstringstring';

/**
 * The GroupQuery model module.
 * @module model/GroupQuery
 * @version 0.1.0
 */
class GroupQuery {
    /**
     * Constructs a new <code>GroupQuery</code>.
     * @alias module:model/GroupQuery
     * @param children {Array.<module:model/AnyOfBaseQueryGroupQuery>} 
     * @param operator {module:model/AnyOfstringstring} 
     */
    constructor(children, operator) { 
        
        GroupQuery.initialize(this, children, operator);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, children, operator) { 
        obj['children'] = children;
        obj['operator'] = operator;
    }

    /**
     * Constructs a <code>GroupQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupQuery} obj Optional instance to populate.
     * @return {module:model/GroupQuery} The populated <code>GroupQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupQuery();

            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], [AnyOfBaseQueryGroupQuery]);
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ApiClient.convertToType(data['operator'], AnyOfstringstring);
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], Object);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/AnyOfBaseQueryGroupQuery>} children
 */
GroupQuery.prototype['children'] = undefined;

/**
 * @member {module:model/AnyOfstringstring} operator
 */
GroupQuery.prototype['operator'] = undefined;

/**
 * @member {Object} from
 */
GroupQuery.prototype['from'] = undefined;






export default GroupQuery;

