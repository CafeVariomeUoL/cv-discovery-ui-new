/**
 * Fast API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FastApi);
  }
}(this, function(expect, FastApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FastApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('clearDbEavsClearDBPut', function() {
      it('should call clearDbEavsClearDBPut successfully', function(done) {
        //uncomment below and update the code to test clearDbEavsClearDBPut
        //instance.clearDbEavsClearDBPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributes2DiscoveryGetAttributes2Get', function() {
      it('should call getAttributes2DiscoveryGetAttributes2Get successfully', function(done) {
        //uncomment below and update the code to test getAttributes2DiscoveryGetAttributes2Get
        //instance.getAttributes2DiscoveryGetAttributes2Get(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributesDiscoveryGetAttributesGet', function() {
      it('should call getAttributesDiscoveryGetAttributesGet successfully', function(done) {
        //uncomment below and update the code to test getAttributesDiscoveryGetAttributesGet
        //instance.getAttributesDiscoveryGetAttributesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributesValsDiscoveryGetAttributeValuesPost', function() {
      it('should call getAttributesValsDiscoveryGetAttributeValuesPost successfully', function(done) {
        //uncomment below and update the code to test getAttributesValsDiscoveryGetAttributeValuesPost
        //instance.getAttributesValsDiscoveryGetAttributeValuesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSettingsDiscoveryGetSettingsGet', function() {
      it('should call getSettingsDiscoveryGetSettingsGet successfully', function(done) {
        //uncomment below and update the code to test getSettingsDiscoveryGetSettingsGet
        //instance.getSettingsDiscoveryGetSettingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('processFileEavsProcessPut', function() {
      it('should call processFileEavsProcessPut successfully', function(done) {
        //uncomment below and update the code to test processFileEavsProcessPut
        //instance.processFileEavsProcessPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryQueryPost', function() {
      it('should call queryQueryPost successfully', function(done) {
        //uncomment below and update the code to test queryQueryPost
        //instance.queryQueryPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveDiscoverySettingsDiscoveryLoadSettingsGet', function() {
      it('should call saveDiscoverySettingsDiscoveryLoadSettingsGet successfully', function(done) {
        //uncomment below and update the code to test saveDiscoverySettingsDiscoveryLoadSettingsGet
        //instance.saveDiscoverySettingsDiscoveryLoadSettingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveDiscoverySettingsDiscoverySaveSettingsPost', function() {
      it('should call saveDiscoverySettingsDiscoverySaveSettingsPost successfully', function(done) {
        //uncomment below and update the code to test saveDiscoverySettingsDiscoverySaveSettingsPost
        //instance.saveDiscoverySettingsDiscoverySaveSettingsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setAttributeMetaDiscoverySetAttributeMetaPost', function() {
      it('should call setAttributeMetaDiscoverySetAttributeMetaPost successfully', function(done) {
        //uncomment below and update the code to test setAttributeMetaDiscoverySetAttributeMetaPost
        //instance.setAttributeMetaDiscoverySetAttributeMetaPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadProcessFileEavsUploadPut', function() {
      it('should call uploadProcessFileEavsUploadPut successfully', function(done) {
        //uncomment below and update the code to test uploadProcessFileEavsUploadPut
        //instance.uploadProcessFileEavsUploadPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
